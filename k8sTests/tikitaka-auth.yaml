apiVersion: v1
kind: Service
metadata:
  name: tikitaka
  labels:
    app: tikitaka
spec:
  selector:
    app: tikitaka
  ports:
    - name: http
      port: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tikitaka
  labels:
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tikitaka
  template:
    metadata:
      labels:
        app: tikitaka
        version: v1
    spec:
      containers:
        - name: tikitaka
          image: tikitaka1/tikitaka-stage:latest
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
          volumeMounts:
            - name: tikitaka-certs
              mountPath: /certs
              # Create on-disk volume to store exec logs
            - mountPath: /tmp
              name: tmp-volume
      volumes:
        - name: tikitaka-certs
          secret:
            secretName: tikitaka-certs
        - name: tmp-volume
          emptyDir: {}
      serviceAccountName: tikitaka
      # Comment the following tolerations if Dashboard must not be deployed on master
#      tolerations:
#        - key: node-role.kubernetes.io/master
#          effect: NoSchedule

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: tikitaka
  name: tikitaka
  namespace: default

---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: tikitaka
  name: tikitaka-certs
  namespace: kube-system
type: Opaque

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tikitaka
  namespace: default
rules:
  - apiGroups: ["", "apps", "*"]
    resources: ["*"]
    verbs: ["*"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tikitaka-role-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: tikitaka
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tikitaka
